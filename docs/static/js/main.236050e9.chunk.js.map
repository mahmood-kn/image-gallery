{"version":3,"sources":["components/ImageCard.js","components/Search.js","App.js","index.js"],"names":["ImageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","i","Search","setSearchTerm","useState","term","setTerm","onSubmit","e","preventDefault","value","onChange","target","type","placeholder","App","images","setImages","isLoading","setIsLoading","useEffect","a","fetch","process","res","json","data","hits","console","log","fetchImages","text","length","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAuCeA,EArCG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACbC,EAAOD,EAAMC,KAAKC,MAAM,KAC9B,OACE,sBAAKC,UAAU,6CAAf,UACE,qBAAKC,IAAKJ,EAAMK,aAAcC,IAAKL,EAAK,KACxC,sBAAKE,UAAU,YAAf,UACE,sBAAKA,UAAU,yCAAf,sBACYH,EAAMO,QAElB,+BACE,+BACE,4CACA,qCAAQP,EAAMQ,YAEhB,+BACE,gDACA,qCAAQR,EAAMS,gBAEhB,+BACE,4CACA,qCAAQT,EAAMU,kBAIpB,qBAAKP,UAAU,YAAf,SACGF,EAAKU,KAAI,SAACC,EAAKC,GAAN,OACR,uBAEEV,UAAU,wFAFZ,cAGIS,IAFGC,YCDFC,EA1BA,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBAC7BC,EAD6B,KACvBC,EADuB,KAMpC,OACE,8BACE,sBAAMC,SANO,SAACC,GAChBA,EAAEC,iBACFN,EAAcE,IAIZ,SACE,sBAAKd,UAAU,4BAAf,UACE,uBACEmB,MAAOL,EACPM,SAAU,SAACH,GAAD,OAAOF,EAAQE,EAAEI,OAAOF,QAClCG,KAAK,OACLC,YAAY,YACZvB,UAAU,gIAEZ,wBAAQA,UAAU,uIAAlB,4BC6BKwB,MA5Cf,WAAgB,IAAD,EACeX,mBAAS,IADxB,mBACNY,EADM,KACEC,EADF,OAEqBb,oBAAS,GAF9B,mBAENc,EAFM,KAEKC,EAFL,OAGWf,mBAAS,IAHpB,mBAGNC,EAHM,KAGAC,EAHA,KAsBb,OAjBAc,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEAEIF,GAAa,GAFjB,SAGsBG,MAAM,gCAAD,OACWC,qCADX,cACsDlB,EADtD,kCAH3B,cAGUmB,EAHV,gBAOuBA,EAAIC,OAP3B,OAOUC,EAPV,OAQIT,EAAUS,EAAKC,MACfR,GAAa,GATjB,kDAWIS,QAAQC,IAAR,MAXJ,2DADc,uBAAC,WAAD,wBAedC,KACC,CAACzB,IAEF,sBAAKd,UAAU,yBAAf,UACE,cAAC,EAAD,CAAQY,cAAe,SAAC4B,GAAD,OAAUzB,EAAQyB,OAEvCb,GAA+B,IAAlBF,EAAOgB,QACpB,oBAAIzC,UAAU,oDAAd,gCAID2B,EACC,oBAAI3B,UAAU,4BAAd,wBAEA,qBAAKA,UAAU,wEAAf,SACGyB,EAAOjB,KAAI,SAACX,GAAD,OACV,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAM6C,aCnClCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.236050e9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ImageCard = ({ image }) => {\r\n  const tags = image.tags.split(',');\r\n  return (\r\n    <div className='max-w-sm rounded shadow-lg overflow-hidden'>\r\n      <img src={image.webformatURL} alt={tags[0]} />\r\n      <div className='px-6 py-4'>\r\n        <div className='font-bold text-purple-500 text-xl mb-2'>\r\n          Photo by {image.user}\r\n        </div>\r\n        <ul>\r\n          <li>\r\n            <strong>Views:</strong>\r\n            <span> {image.views}</span>\r\n          </li>\r\n          <li>\r\n            <strong>Downloads:</strong>\r\n            <span> {image.downloads}</span>\r\n          </li>\r\n          <li>\r\n            <strong>Likes:</strong>\r\n            <span> {image.likes}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className='px-6 py-4'>\r\n        {tags.map((tag, i) => (\r\n          <span\r\n            key={i}\r\n            className='px-3 py-1 bg-gray-200 inline-block rounded-full text-gray-700 font-semibold mb-2 mr-2'>\r\n            #{tag}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCard;\r\n","import React, { useState } from 'react';\r\n\r\nconst Search = ({ setSearchTerm }) => {\r\n  const [term, setTerm] = useState('');\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSearchTerm(term);\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <div className='flex justify-center my-5 '>\r\n          <input\r\n            value={term}\r\n            onChange={(e) => setTerm(e.target.value)}\r\n            type='text'\r\n            placeholder='Search...'\r\n            className='w-4/6 border border-gray-200 border-r-0 rounded px-3 py-2 shadow-md rounded-r-none focus:outline-none focus:border-gray-500'\r\n          />\r\n          <button className='text-lg w-1/6 rounded shadow-md bg-green-500 text-white font-semibold px-3 py-2 hover:bg-green-400 rounded-l-none focus:outline-none'>\r\n            Search\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from 'react';\nimport ImageCard from './components/ImageCard';\nimport Search from './components/Search';\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState('');\n\n  useEffect(() => {\n    async function fetchImages() {\n      try {\n        setIsLoading(true);\n        const res = await fetch(\n          `https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true`\n        );\n\n        const data = await res.json();\n        setImages(data.hits);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchImages();\n  }, [term]);\n  return (\n    <div className='container px-2 m-auto '>\n      <Search setSearchTerm={(text) => setTerm(text)} />\n\n      {!isLoading && images.length === 0 && (\n        <h1 className='md:text-6xl sm:text-4xl text-xl text-center mt-20'>\n          No Images Found...\n        </h1>\n      )}\n      {isLoading ? (\n        <h1 className='text-6xl text-center mt-9'>Loading...</h1>\n      ) : (\n        <div className='grid md:grid-cols-3 sm:grid-cols-2 gap-3 mx-auto justify-items-center'>\n          {images.map((image) => (\n            <ImageCard key={image.id} image={image} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}